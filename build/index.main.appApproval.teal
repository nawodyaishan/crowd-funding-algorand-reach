#pragma version 8
// resource: R_Txn
txn ApplicationID
bz alloc
byte base64()
app_global_get
dup
int 0
extract_uint64
store 1 // GV_currentStep :: UInt
int 8
extract_uint64
store 2 // GV_currentTime :: UInt
byte base64()
preamble:
pushbytess base64(wZStmQ==) base64(39kjKA==)
txna ApplicationArgs 0
match _reachp_0 _reachp_1
errl:
err
_reachi_0:
load 11 // v70
btoi
store 12 // v69
byte base64(gsRh/g==)
load 12 // v69
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e0" [v69] "_reach_e0(uint64)"
load 12 // v69
callsub l2_LF_timeCheck
l3_LF_svsDump_1:
byte base64()
int 1
global Round
updateStateNoOp:
store 2 // GV_currentTime :: UInt
store 1 // GV_currentStep :: UInt
pop
byte base64()
load 1 // GV_currentStep :: UInt
itob
load 2 // GV_currentTime :: UInt
itob
concat
app_global_put
txn OnCompletion
int NoOp
==
assert
// checked on completion
callsub l5_LF_updateMbr
updateState:
load 3 // GV_wasntMeth :: Bool
bnz done
apiReturn_noCheck:
byte base64(FR98dQ==)
load 4 // GV_apiRet :: Null
concat
log // up to 4 bytes
done:
int 1
return
_reachi_1:
int 1
load 1 // GV_currentStep :: UInt
==
assert
l4_LF_svsLoad_1:
load 11 // v73
btoi
store 12 // v72
byte base64(1RUZFA==)
load 12 // v72
itob
concat
log // up to 12 bytes
// ^ log: "_reach_e1" [v72] "_reach_e1(uint64)"
load 12 // v72
callsub l2_LF_timeCheck
updateStateHalt:
txn OnCompletion
int DeleteApplication
==
assert
// checked on completion
callsub l5_LF_updateMbr
// resource: R_Account
int 0
global CurrentApplicationAddress
global CreatorAddress
callsub l6_LF_makeTxn_False_True_False_True
b updateState
_reachp_0:
callsub l0_LF_wasntMeth
int 100000
l1_LF_mbrAdd:
load 6 // GV_mbrAdd :: UInt
+
store 6 // GV_mbrAdd :: UInt
txna ApplicationArgs 1
store 11 // v70
b _reachi_0
_reachp_1:
callsub l0_LF_wasntMeth
txna ApplicationArgs 1
store 11 // v73
b _reachi_1
alloc:
int 0
txn GlobalNumUint
==
assert
int 1
txn GlobalNumByteSlice
==
assert
int 0
txn LocalNumUint
==
assert
int 0
txn LocalNumByteSlice
==
assert
callsub l0_LF_wasntMeth
byte base64()
int 0
int 0
b updateStateNoOp
apiReturn_check:
txn OnCompletion
int NoOp
==
assert
// checked on completion
b apiReturn_noCheck
l7_LF_makeTxnK_False_True:
int 0
itxn_field Fee
int pay
itxn_field TypeEnum
itxn_field Receiver
itxn_field Amount
itxn_submit
retsub
updateMbr_eq:
pop
retsub
updateMbr_neg:
swap
-
dup
store 6 // GV_mbrAdd :: UInt
global CreatorAddress
callsub l9_LF_makeTxn_False_False_False_True
retsub
updateMbr_pos_eq:
-
dup
bz updateMbr_eq
dup
store 6 // GV_mbrAdd :: UInt
l8_LF_checkTxn_False:
// resource: R_Txn
txn GroupIndex
load 0 // GV_txnCounter :: UInt
int 1
+
dup
store 0 // GV_txnCounter :: UInt
-
dupn 2
gtxns Receiver
global CurrentApplicationAddress
==
assert
gtxns TypeEnum
int pay
==
assert
gtxns Amount
==
assert
retsub
l0_LF_wasntMeth:
int 1
store 3 // GV_wasntMeth :: Bool
retsub
l5_LF_updateMbr:
load 6 // GV_mbrAdd :: UInt
load 7 // GV_mbrSub :: UInt
dup2
>=
bz updateMbr_neg
b updateMbr_pos_eq
l2_LF_timeCheck:
dup
int 0
==
swap
load 2 // GV_currentTime :: UInt
==
||
assert
retsub
l9_LF_makeTxn_False_False_False_True:
itxn_begin
b l7_LF_makeTxnK_False_True
l6_LF_makeTxn_False_True_False_True:
itxn_begin
itxn_field CloseRemainderTo
b l7_LF_makeTxnK_False_True
